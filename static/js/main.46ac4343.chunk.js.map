{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","App","Question","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","questions","questions2","m1","react_default","a","createElement","text1","yes","no","m2","m3","m4","m5","m6","m7","m8","text","yes_question_pointer","no_question_pointer","state","count","changeText","bind","assertThisInitialized","testFunction","increment","negativeResponse","inherits","createClass","key","value","newText","setState","id","Button","variant","size","fullWidth","color","onClick","React","Component","className","reportWebVitals","onPerfEntry","Function","e","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.46ac4343.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Slide from '@mui/material/Slide';\n\nfunction App() {\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.text1 = props.text;\n    this.yes_question_pointer = props.yes;\n    this.no_question_pointer = props.no;\n    this.state = {text: 'Can you survive without it?', count: 1};\n\n    this.changeText = this.changeText.bind(this);\n    this.testFunction = this.testFunction.bind(this);\n    this.increment = this.increment.bind(this);\n    this.negativeResponse = this.negativeResponse.bind(this);\n  }\n\n  questions = ['Can you survive without it?',\n               'Is there a cheaper version of similar qualities that satisfies your needs?',\n               'Is your name Joanna?',\n               'Have you thought this through?',\n               'For more than 10 minutes?',\n               'For more than 1 hour?',\n               'For more than a day?',\n               'Liar...']\n\n  questions2 = {m1:<Question text1=\"Can you survive without it?\" yes='m3' no='m2'/>,\n               m2:'Is there a cheaper version of similar qualities that satisfies your needs?',\n               m3:'Is your name Joanna?',\n               m4:'Have you thought this through?',\n               m5:'For more than 10 minutes?',\n               m6:'For more than 1 hour?',\n               m7:'For more than a day?',\n               m8:'Liar...'}\n\n  changeText(newText) {\n    this.setState({\n      text: newText\n    })\n  }\n  \n  increment(){\n    this.setState({\n      count: this.state.count+1\n    })\n  }\n  \n  testFunction (){\n    this.increment();\n    this.changeText(this.questions[this.state.count]);\n  }\n\n  negativeResponse(){\n    this.changeText('Then buy it!')\n    this.setState({\n      count: 0\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.text}</h1>\n        <div id=\"buttons\">\n            <Button variant=\"contained\" size=\"large\" fullWidth={true} color=\"primary\" onClick={this.testFunction}><h2>Yes</h2></Button>\n            <Button variant=\"contained\" size=\"large\" fullWidth={true} color=\"primary\" onClick={this.negativeResponse}><h2>No</h2></Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction handleClick(props) {\n  return console.log('yo')\n}\n\n\nfunction GenerateText(props) {\n  return <h1>{props.name}</h1>;\n}\n\nfunction GetPercentage() {\n  return 10+\"%\";\n}\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>Should I Buy It?</h1>\n        <Question />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n/**<footer className=\"App-footer\"> progress bar at <GetPercentage/></footer>*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}